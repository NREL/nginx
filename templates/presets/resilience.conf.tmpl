{{ $static := (getenv "NGINX_STATIC_EXT_REGEX" "css|cur|js|jpe?g|gif|htc|ico|png|xml|otf|ttf|eot|woff|woff2|svg|mp4|svgz|ogg|ogv|pdf|pptx?|zip|tgz|gz|rar|bz2|doc|xls|exe|tar|mid|midi|wav|bmp|rtf|txt|map") }}

index index.php index.html;

include fastcgi.conf;

fastcgi_pass_header "X-Accel-Buffering";

{{ if getenv "NGINX_DRUPAL_HIDE_HEADERS" }}
fastcgi_hide_header 'X-Drupal-Cache';
fastcgi_hide_header 'X-Generator';
fastcgi_hide_header 'X-Drupal-Dynamic-Cache';
{{ end }}

location /resilience {
    add_header X-debug-message "/resilience location was set" always;
    alias /var/www/html/docroot;

    try_files $uri $uri/ @resilience;

    {{ if getenv "NGINX_DRUPAL_FILE_PROXY_URL" }}
    location ~* /sites/.+/files {
        try_files $uri @file_proxy;
    }
    {{ end }}
    location ~* /system/files/ {
        include fastcgi.conf;
        fastcgi_param QUERY_STRING $query_string;
        fastcgi_param SCRIPT_NAME /index.php;
        fastcgi_param SCRIPT_FILENAME $document_root/index.php;
        fastcgi_pass php;
        log_not_found off;
    }

    location ~* /sites/.+/files/private/ {
        internal;
    }

    location ~* /files/styles/ {
        access_log {{ getenv "NGINX_STATIC_ACCESS_LOG" "off" }};
        expires {{ getenv "NGINX_STATIC_EXPIRES" "1y" }};
        try_files $uri @drupal;
    }

    location ~* /sites/.+/files/.+\.txt {
        access_log {{ getenv "NGINX_STATIC_ACCESS_LOG" "off" }};
        expires {{ getenv "NGINX_STATIC_EXPIRES" "1y" }};
        tcp_nodelay {{ getenv "NGINX_STATIC_TCP_NODELAY" "off" }};
        open_file_cache {{ getenv "NGINX_STATIC_OPEN_FILE_CACHE" "max=1000 inactive=30s" }};
        open_file_cache_valid {{ getenv "NGINX_STATIC_OPEN_FILE_CACHE_VALID" "30s" }};
        open_file_cache_min_uses {{ getenv "NGINX_STATIC_OPEN_FILE_CACHE_MIN_USES" "2" }};
        open_file_cache_errors {{ getenv "NGINX_STATIC_OPEN_FILE_CACHE_ERRORS" "off" }};
    }

    location ~* /sites/.+/files/advagg_css/ {
        expires max;
        add_header ETag '';
        add_header Last-Modified 'Wed, 20 Jan 1988 04:20:42 GMT';
        add_header Accept-Ranges '';
        {{ if not (getenv "NGINX_NO_DEFAULT_HEADERS") }}
        add_header X-XSS-Protection '1; mode=block' always;
        add_header X-Frame-Options SAMEORIGIN always;
        add_header X-Content-Type-Options nosniff always;
        add_header Strict-Transport-Security "max-age=31536000";
        {{ end }}
        location ~* /sites/.*/files/advagg_css/css[_[:alnum:]]+\.css$ {
            access_log {{ getenv "NGINX_STATIC_ACCESS_LOG" "off" }};
            try_files $uri @drupal;
        }
    }

    location ~* /sites/.+/files/advagg_js/ {
        expires max;
        add_header ETag '';
        add_header Last-Modified 'Wed, 20 Jan 1988 04:20:42 GMT';
        add_header Accept-Ranges '';
        {{ if not (getenv "NGINX_NO_DEFAULT_HEADERS") }}
        add_header X-XSS-Protection '1; mode=block' always;
        add_header X-Frame-Options SAMEORIGIN always;
        add_header X-Content-Type-Options nosniff always;
        add_header Strict-Transport-Security "max-age=31536000";
        {{ end }}
        location ~* /sites/.*/files/advagg_js/js[_[:alnum:]]+\.js$ {
            access_log {{ getenv "NGINX_STATIC_ACCESS_LOG" "off" }};
            try_files $uri @drupal;
        }
    }

    location ~* /admin/reports/hacked/.+/diff/ {
        try_files $uri @drupal;
    }
    {{ if getenv "NGINX_DRUPAL_ALLOW_XML_ENDPOINTS" }}
    location ~* ^.+\.xml {
        try_files $uri @drupal;
    }
    {{ else }}
    location ~* /rss.xml {
        try_files $uri @drupal-no-args;
    }

    location ~* /sitemap.xml {
        try_files $uri @drupal;
    }
    {{ end }}

    location ~* ^(?:.+\.(?:htaccess|make|txt|engine|inc|info|install|module|profile|po|pot|sh|.*sql|test|theme|tpl(?:\.php)?|xtmpl)|code-style\.pl|/Entries.*|/Repository|/Root|/Tag|/Template)$ {
        return 404;
    }

    location ~* ^.+\.(?:{{ $static }})$ {
        access_log {{ getenv "NGINX_STATIC_ACCESS_LOG" "off" }};
        tcp_nodelay {{ getenv "NGINX_STATIC_TCP_NODELAY" "off" }};
        expires {{ getenv "NGINX_STATIC_EXPIRES" "1y" }};

        add_header Pragma "cache";
        add_header Cache-Control "public, max-age=31536000, immutable'; ";
        {{ if not (getenv "NGINX_NO_DEFAULT_HEADERS") }}
        add_header X-XSS-Protection '1; mode=block' always;
        add_header X-Frame-Options SAMEORIGIN always;
        add_header X-Content-Type-Options nosniff always;
        add_header Strict-Transport-Security "max-age=31536000";
        {{ end }}
        open_file_cache {{ getenv "NGINX_STATIC_OPEN_FILE_CACHE" "max=1000 inactive=30s" }};
        open_file_cache_valid {{ getenv "NGINX_STATIC_OPEN_FILE_CACHE_VALID" "30s" }};
        open_file_cache_min_uses {{ getenv "NGINX_STATIC_OPEN_FILE_CACHE_MIN_USES" "2" }};
        open_file_cache_errors {{ getenv "NGINX_STATIC_OPEN_FILE_CACHE_ERRORS" "off" }};

        gzip_static on;
        location ~* ^.+\.(?:svgz|tgz|gz)$ {
            gzip off;
            add_header Content-Encoding gzip;
            {{ if not (getenv "NGINX_NO_DEFAULT_HEADERS") }}
            add_header X-XSS-Protection '1; mode=block' always;
            add_header X-Frame-Options SAMEORIGIN always;
            add_header X-Content-Type-Options nosniff always;
            add_header Strict-Transport-Security "max-age=31536000";
        {{ end }}
        }

        {{ if getenv "NGINX_STATIC_404_TRY_INDEX" }}
        try_files $uri @drupal;
        {{ end }}
    }

    # try_files $uri @drupal;

    location ~ \.php$ {
         add_header X-debug-message "/.php location was set" always;
         include fastcgi.conf;
         fastcgi_param SCRIPT_FILENAME $request_filename;
         fastcgi_param WWW_NREL {{ getenv "WWW_NREL" "PROD" }};
         include fastcgi_params;
         fastcgi_pass php;
         track_uploads uploads 60s;
    }
}

# cannot be nested, and cannot contain nested locations.
location @resilience {
    add_header X-debug-message "@resilience named location was set used for request redirection" always;
    add_header X-debug-message "request_method: $request_method" always;
    add_header X-debug-message "request_uri: $request_uri" always;
    add_header X-debug-message "document_uri: $document_uri" always;
    add_header X-debug-message "document_root: $document_root" always;
    add_header X-debug-message "server_name: $server_name" always;
    add_header X-debug-message "query_string: $query_string" always;
    add_header X-debug-message "fastcgi_script_name: $fastcgi_script_name" always;
    add_header X-debug-message "document_root: $document_root" always;
    add_header X-debug-message "fastcgi_script_name: $fastcgi_script_name" always;
    # here is where I need to be smarter
    rewrite /resilience/(.*)$ /resilience/index.php?/$1 last;
}

{{ if getenv "NGINX_DRUPAL_FILE_PROXY_URL" }}
location @file_proxy {
    rewrite ^ {{ getenv "NGINX_DRUPAL_FILE_PROXY_URL" }}$request_uri? permanent;
}
{{ end }}

location @drupal {
    add_header X-debug-message "@drupal named location was set used for request redirection" always;
    include fastcgi.conf;
    fastcgi_param QUERY_STRING $query_string;
    fastcgi_param SCRIPT_NAME /index.php;
    fastcgi_param SCRIPT_FILENAME $document_root/index.php;
    fastcgi_param WWW_NREL {{ getenv "WWW_NREL" "PROD" }};
    fastcgi_pass php;
    track_uploads {{ getenv "NGINX_TRACK_UPLOADS" "uploads 60s" }};
}

location @drupal-no-args {
    add_header X-debug-message "@drupal-no-args named location was set used for request redirection" always;
    include fastcgi.conf;
    fastcgi_param QUERY_STRING q=$uri;
    fastcgi_param SCRIPT_NAME /index.php;
    fastcgi_param SCRIPT_FILENAME $document_root/index.php;
    fastcgi_pass php;
}

location = /index.php {
    add_header X-debug-message "/index location was set" always;
    fastcgi_pass php;
}

location = /core/install.php {
    add_header X-debug-message "/core/install.php location was set" always;
    fastcgi_pass php;
}

location ~* ^/core/authorize.php {
    add_header X-debug-message "/core/authorize.php location was set" always;
    include fastcgi.conf;
    fastcgi_param QUERY_STRING $args;
    fastcgi_param SCRIPT_NAME /core/authorize.php;
    fastcgi_param SCRIPT_FILENAME $document_root/core/authorize.php;
    fastcgi_pass php;
}

location = /core/modules/statistics/statistics.php {
    add_header X-debug-message "/core/modules/statistics location was set" always;
    fastcgi_pass php;
}

location = /cron {
    add_header X-debug-message "/cron location was set" always;
    include fastcgi.conf;
    fastcgi_param QUERY_STRING $args;
    fastcgi_param SCRIPT_NAME /index.php;
    fastcgi_param SCRIPT_FILENAME $document_root/index.php;
    fastcgi_pass php;
}

location ~* ^/update.php {
    add_header X-debug-message "/update.php location was set" always;
    include fastcgi.conf;
    fastcgi_param QUERY_STRING $args;
    fastcgi_param SCRIPT_NAME /update.php;
    fastcgi_param SCRIPT_FILENAME $document_root/update.php;
    fastcgi_pass php;
}

location ^~ /patches {
    add_header X-debug-message "/patches location was set" always;
    return 404;
}

location ^~ /backup {
    add_header X-debug-message "/backup location was set" always;
    return 404;
}

location ~* ^.+\.php$ {
    return 404;
}

location ~ (?<upload_form_uri>.*)/x-progress-id:(?<upload_id>\d*) {
    rewrite ^ $upload_form_uri?X-Progress-ID=$upload_id;
}

location ~ ^/progress$ {
    add_header X-debug-message "/progress$ location was set" always;
    upload_progress_json_output;
    report_uploads uploads;
}
